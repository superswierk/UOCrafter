name: Build and Release EXE

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. v0.3.0)'
        required: true
        default: 'v0.2.0'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install pyinstaller

    - name: Create version.txt dynamically
      shell: bash
      run: |
        version="${{ github.event.inputs.version }}"
        ver_nums=$(echo "$version" | sed 's/^v//' | awk -F. '{printf "%d, %d, %d, 0", $1, $2, $3}')

        echo "VSVersionInfo(" > version.txt
        echo "  ffi=FixedFileInfo(" >> version.txt
        echo "    filevers=($ver_nums)," >> version.txt
        echo "    prodvers=($ver_nums)," >> version.txt
        echo "    mask=0x3f," >> version.txt
        echo "    flags=0x0," >> version.txt
        echo "    OS=0x40004," >> version.txt
        echo "    fileType=0x1," >> version.txt
        echo "    subtype=0x0," >> version.txt
        echo "    date=(0, 0)" >> version.txt
        echo "  )," >> version.txt
        echo "  kids=[" >> version.txt
        echo "    StringFileInfo([" >> version.txt
        echo "      StringTable(" >> version.txt
        echo "        '040904B0'," >> version.txt
        echo "        [" >> version.txt
        echo "          StringStruct('CompanyName', 'RichRichie')," >> version.txt
        echo "          StringStruct('FileDescription', 'UOCrafter GUI Tool')," >> version.txt
        echo "          StringStruct('FileVersion', '$version')," >> version.txt
        echo "          StringStruct('InternalName', 'UOCrafter')," >> version.txt
        echo "          StringStruct('OriginalFilename', 'UOCrafter.exe')," >> version.txt
        echo "          StringStruct('ProductName', 'UOCrafter Crafting Assistant')," >> version.txt
        echo "          StringStruct('ProductVersion', '$version')" >> version.txt
        echo "        ]" >> version.txt
        echo "      )" >> version.txt
        echo "    ])," >> version.txt
        echo "    VarFileInfo([VarStruct('Translation', [1033, 1200])])" >> version.txt
        echo "  ]" >> version.txt
        echo ")" >> version.txt

    - name: Build executable
      run: |
        pyinstaller --onefile --windowed --icon=icon.ico --version-file=version.txt UOCrafter.py

    - name: Create ZIP archive
      shell: bash
      run: |
        VERSION="${{ github.event.inputs.version }}"
        ZIP_FILE="UOCrafter-${VERSION}.zip"
        
        mkdir -p release_archive
        mv dist/UOCrafter.exe release_archive/UOCrafter.exe
        
        zip -j "${ZIP_FILE}" release_archive/*

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: "UOCrafter ${{ github.event.inputs.version }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload ZIP to Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.version }}
        files: UOCrafter-${{ github.event.inputs.version }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}