name: Build and Release EXE

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. v0.3.0)'
        required: true
        default: 'v0.2.0'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies (py2exe)
      run: |
        pip install py2exe

    - name: Get Build Version
      id: get_build_version
      shell: bash
      run: |
        BASE_VERSION="${{ github.event.inputs.version }}"
        BUILD_NUMBER="${{ github.run_number }}"
        FULL_VERSION="${BASE_VERSION}.${BUILD_NUMBER}"
        echo "Release tag will be: $FULL_VERSION"
        echo "full_version=$FULL_VERSION" >> $GITHUB_OUTPUT

    # Krok Create version.txt dynamically jest usunięty,
    # ponieważ informacje o wersji są teraz w setup.py

    - name: Build executable with py2exe
      run: |
        # Używamy pełnej wersji z poprzedniego kroku i przekazujemy ją do setup.py
        # za pomocą zmiennej środowiskowej lub jako argument
        # Tutaj przekazujemy jako argument, który potem setup.py odczytuje
        python setup.py py2exe --version-build "${{ steps.get_build_version.outputs.full_version }}"

    - name: Create ZIP archive
      shell: bash
      run: |
        VERSION="${{ steps.get_build_version.outputs.full_version }}"
        ZIP_FILE="UOCrafter-${VERSION}.zip"
        
        # py2exe domyślnie tworzy pliki w katalogu 'dist_py2exe' (zgodnie z setup.py)
        # i umieszcza EXE bezpośrednio w nim, bez podkatalogu dla głównego skryptu.
        mkdir -p release_archive
        mv dist_py2exe/UOCrafter.exe release_archive/UOCrafter.exe
        
        "C:/Program Files/7-Zip/7z.exe" a -tzip "${ZIP_FILE}" ./release_archive/UOCrafter.exe

    - name: Create GitHub Release and Upload ZIP
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_build_version.outputs.full_version }}
        name: "UOCrafter ${{ steps.get_build_version.outputs.full_version }}"
        draft: false
        prerelease: false
        files: UOCrafter-${{ steps.get_build_version.outputs.full_version }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}